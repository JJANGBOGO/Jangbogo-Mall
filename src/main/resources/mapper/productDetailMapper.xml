<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.jangbogo.mall.dao.ProductDetailMapper">
<!--    상품 번호에 해당하는 상품 하나 가져오기-->
<!--    service의 read-->
    <select id="selectProd" parameterType="Integer" resultType="ProductDetailDto">
        select p.prc as 'price', p.name as 'name', p.upload_path as 'image_path', p.ctent as 'content', p.cate_idx as 'cate_idx', p.DC_RATE as 'dc_rate', p.DC_STATE_CD as 'dc_state', pd.prod_idx as 'prod_idx', pd.GUID as 'guid', pd.warn as 'warn', pd.ORPLC as 'origin', pd.SLE_UNIT as 'unit', pd.WEIGHT as 'weight', pd.SFKP_TP_STATE_CD as 'keepingType', p.seler_idx as 'SELER_IDX'
        from product p inner join prod_dtl pd
        on p.idx = pd.prod_idx
        where pd.prod_idx = #{prod_idx} and p.DSPLY_STATE_CD = 1 and pd.REG_STATE_CD = 2 and pd.STATE_CD = 1;
    </select>

    <select id="findDlvry" parameterType="String" resultType="Integer">
        select c.DLVRY_EDI_IDX as 'dlvry_method'
        from category  c
        where c.id = #{cate_idx};
    </select>

    <select id="dlvryInfo" parameterType="Integer" resultType="ProductDetailDto">
        select dlvry_mthd.idx, dlvry_mthd.DLVRY_TYPE_CD as 'dlvry_type', dlvry_mthd.PACK_STATE_CD as 'packing_type', dlvry_mthd.warn as 'dlvry_warn'
        from dlvry_mthd
        where idx = #{dlvry_method};
    </select>
<!--    service의 findBrand-->
    <select id="selectBrand" parameterType="Integer" resultType="ProductDetailDto">
        select s.cpnm as 'brandName'
        from product p left join seler s
        on p.seler_idx = s.idx
        where p.idx = #{prod_idx};
    </select>
<!-- service의 findProdFile-->
    <select id="selectProdFile" parameterType="Integer" resultType="ProductFileDto">
        select pd.PROD_IDX, pf.UUID, pf.name, pf.UPLOAD_PATH, pf.TYPE, pf.STATE_CD, pf.SORT_ODR, pf.CRT_TM, pf.CRT_IDX, pf.UPT_TM, pf.UPT_IDX
        from prod_dtl pd inner join prod_file pf
        on pd.PROD_IDX = pf.PROD_IDX
        where pd.PROD_IDX = #{prod_idx};
    </select>




    <select id="checkWishlist" parameterType="map" resultType="Integer">
        select count(*)
        from WISHLIST
        where PROD_IDX = #{prod_idx} and USER_IDX = #{user_idx}
    </select>

    <insert id="insertWishlist" parameterType="map">
        insert into wishlist (PROD_IDX, USER_IDX)
        values (#{prod_idx},#{user_idx})
    </insert>

    <delete id="deleteWishList" parameterType="map">
        delete
        from WISHLIST
        where USER_IDX = #{user_idx} and PROD_IDX = #{prod_idx};
    </delete>
</mapper>